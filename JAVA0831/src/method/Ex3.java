package method;

public class Ex3 {

	public static void main(String[] args) {
		// 3. 전달인자만 있고, 리턴값은 없는 메서드 호출
		System.out.println("동생아! 200원 줄테니 과자 사먹어라!");
		// 전달인자가 있으므로 메서드 호출 시 소괄호() 안에 전달할 데이터 기술
		// => 리터럴을 직접 전달하거나, 변수 값을 통해 전달 가능
		// => 리턴값이 없으므로 메서드 호출 결과를 저장할 변수를 선언하거나
		//    출력문 등의 내부에서 메서드 호출이 불가능하며, 단독으로 호출해야한다!
//		sister_3(200); // sister_3() 메서드 호출 시 전달인자로 정수 리터럴 200 을 전달
		// 만약, 메서드 선언부에 전달인자를 저장할 매개변수가 없을 경우 오류 발생!
		// => The method sister_3() in the type Ex3 is not applicable for the arguments (int)
		
		// 변수를 선언하여 전달인자로 사용될 데이터를 저장한 후 변수를 전달해도 동일함
		int m = 500;
		sister_3(m);
		
		System.out.println("------------");
		// =====================================================================
		// 전달인자가 복수개인 메서드 호출
		System.out.println("동생아! 연필하고 공책을 줄테니 공부해라!");
		sister_3_2("연필", "공책"); // sister_3_2() 메서드에 문자열 2개 전달
		
	} // main() 메서드 끝

	/*
	 * < 메서드 정의 기본 문법 >
	 * [제한자] 리턴타입 메서드명([매개변수...]) {
	 * 		// 메서드가 호출되었을 때 실행할 코드들...
	 *      [return [데이터];]
	 * }
	 */
	// 3. 전달인자만 있고, 리턴값은 없는 메서드 정의
	// => 리턴값이 없으므로 리턴타입에 void 명시(생략 불가)
	// => 전달인자가 있으므로 전달받은 데이터의 타입과 일치하는 변수(= 매개변수) 선언 필수!
	//    이 메서드는 정수 1개를 전달받으므로 int 타입 변수 선언 필수!
	public static void sister_3(int money) { // 정수 데이터 1개를 전달받음
		// 전달받은 전달인자가 매개변수에 저장이 되고, 메서드 내에서 자유롭게 사용 가능
		// 이 때, 전달되는 값 x 는 int money 변수에 저장되므로 int money = x 와 동일
		// => 외부로부터 메서드 호출 시 정수 200을 전달받아 매개변수 money 에 저장하므로
		//    int money = 200 과 동일한 코드로 취급됨
		System.out.println("동생 : 오빠가 과자 사먹으라고 " + money + "원을 줬다!");
		
		money -= 200;
		System.out.println("동생 : 새우깡 사먹고 " + money + "원이 남았다!");
		
		// --------------------------------------------------------------------------
		// 리턴값이 없으므로 return 문을 생략하거나 빈 return; 문을 기술할 수 있음
//		return "물"; // 리턴타입이 void 인 메서드에 리턴값을 명시하면 오류 발생!
		// => Void methods cannot return a value
		
//		return; // 리턴값이 없는 return 문은 사용 가능
		
		// 빈 return 문은 주로 조건문 등을 사용하여 특정 조건에서
		// 메서드 실행을 종료하고 빠져나가야 할 때 주로 사용
		// ex) 과자 사고 남은 잔돈이 200원 미만이면 메서드 실행을 즉시 종료하고 돌아가기
		if(money < 200) {
			System.out.println("잔돈이 200원 미만이므로 메서드 종료!");
			return; // 현재 메서드 실행 종료 후 즉시 호출한 곳으로 돌아가기(리턴값은 없음)
		}
		
		// 만약, if 문 판별 결과가 false 일 경우 return 문이 실행되지 않으므로
		// if 문 아래쪽 실행문이 실행될 수 있다!
		System.out.println("동생 : 잔돈이 많이 남았으니 과자를 더 사먹자!");
		
	} // sister_3() 메서드 끝
	
	// =====================================================================
	// 전달인자가 복수개인 메서드 정의
	// => 전달되는 데이터의 순서와 타입에 맞게 메서드의 매개변수 선언
	//    ex) 정수, 문자열 전달 시 메서드 매개변수는 int, String 타입으로 선언
	public static void sister_3_2(String item1, String item2) {
		// 메서드 호출 시 "연필, "공책" 순으로 전달했기 때문에
		// item1 변수에 "연필", item2 변수에 "공책" 이 저장됨
		System.out.println("오빠가 준 첫번째 아이템 : " + item1);
		System.out.println("오빠가 준 두번째 아이템 : " + item2);
	}
	
} // Ex3 클래스 끝













