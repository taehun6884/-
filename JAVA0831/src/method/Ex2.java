package method;

public class Ex2 {

	public static void main(String[] args) {
		// 2. 전달인자는 없고, 리턴값만 있는 메서드 호출
		// => 전달인자가 없으므로 메서드 호출 시 소괄호() 안에 아무 데이터도 전달하지 않음
		System.out.println("동생아! 물 좀 떠온나!");
		// 메서드 호출 코드에서 리턴되는 값을 전달받아 직접 사용하거나 저장할 수 있음
//		String result = sister_2(); // sister_2() 메서드 호출 후 리턴값을 변수에 저장
		// sister_2() 메서드에서 "물" 이라는 문자열을 리턴하므로 변수에 "물" 이 저장
		// => String result = "물"; 과 동일한 코드로 사용됨
//		System.out.println("동생이 떠다 준 것 : " + result);
		
		// 리턴값을 변수에 저장하지 않고, 출력문 등에서 바로 사용할 경우
		// => 출력문 내에서 메서드 호출하는 코드가 실행되도록 하면 됨
		System.out.println("동생이 떠다 준 것 : " + sister_2());
		// => 출력문 내의 문자열 결합 과정에서 메서드로 코드 흐름이 이동하여
		//    메서드 내의 작업 수행 후 리턴값을 전달받아 문자열 결합 후 출력문 실행됨
		
	} // main() 메서드 끝

	/*
	 * < 메서드 정의 기본 문법 >
	 * [제한자] 리턴타입 메서드명([매개변수...]) {
	 * 		// 메서드가 호출되었을 때 실행할 코드들...
	 *      [return [데이터];]
	 * }
	 */
	
	// 2. 전달인자는 없고, 리턴값만 있는 메서드 정의
	// => 리턴값이 있으므로 리턴타입은 메서드에서 리턴할 데이터의 데이터타입을 기술
	//    만약, 문자열을 리턴할 경우 String, 정수 리턴 시 int 타입을 기술
	// => 리턴타입을 void 가 아닌 다른 타입으로 기술한 상태에서
	//    메서드 내에서 아무 값도 리턴하지 않을 경우 오류 발생!
	//    (This method must return a result of type XXX => XXX 타입 데이터를 반드시 리턴해라!) 
	// => 전달인자가 없으므로, 매개변수는 아무것도 선언하지 않음
	public static String sister_2() {
		System.out.println("동생 : 오빠가 물 떠오라고 시켰다!");
		
		// 메서드 내에서 리턴값을 기술해야할 경우 return 문을 명시하고 그 뒤에 데이터 지정
		// => 이 때, 리턴할 데이터는 리터럴 또는 변수 또는 식 모두 사용 가능
		//    단, 리턴타입과 일치하는 데이터만 기술 가능
//		return "물"; // String 타입 리터럴을 직접 리턴
		
		String result = "물"; // 리턴할 데이터를 변수에 저장한 후
		return result; // 변수 값을 리턴할 수도 있음
		// => return 문이 실행되면 해당 메서드는 즉시 실행이 종료되고 원래 위치로 돌아감
		// => 문자열 "물" 을 가지고 메서드를 호출한 곳으로 돌아감(sister_2() 호출 코드 위치)
		
//		System.out.println("메서드 끝!"); // 오류 발생! => Unreachable code
		// => return 문 아래쪽에 기술되는 코드는 실행되지 못하므로 오류 발생!
	}
	
} // Ex2 클래스 끝












